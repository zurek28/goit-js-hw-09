{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBAK3C,SAASG,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCX,EAAAY,OAAOC,QAAQ,uBAAqBL,QAAiBC,OAGrDT,EAAAY,OAAOE,QAAQ,sBAAoBN,QAAeC,M,CAXpCN,SAASC,cAAc,uBAe/BW,iBAAiB,SAASC,IAClCA,EAAEC,iBACF,MAAMC,EAAaC,SAASjB,EAAWkB,OACjCC,EAAYF,SAASd,EAAUe,OAC/BE,EAAkBH,SAASb,EAAYc,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAiBC,IAC/BA,EAAI,EACNC,YAAW,IACFjB,EAAcgB,EAAI,EAAGL,IAC3BA,GAEHM,YAAW,IACFjB,EAAcgB,EAAI,EAAGL,EAAaG,EAAYE,IACpDL,EAAaG,EAAYE,EAAE","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('input[name=delay]');\nconst stepInput = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button[type=submit]');\n\n// console.log(amountInput);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nsubmitBtn.addEventListener('click', e => {\n  e.preventDefault();\n  const startDelay = parseInt(delayInput.value);\n  const stepDelay = parseInt(stepInput.value);\n  const promiseQuantity = parseInt(amountInput.value);\n\n  for (let i = 0; i < promiseQuantity; i++) {\n    if (i < 1) {\n      setTimeout(() => {\n        return createPromise(i + 1, startDelay);\n      }, startDelay);\n    } else {\n      setTimeout(() => {\n        return createPromise(i + 1, startDelay + stepDelay * i);\n      }, startDelay + stepDelay * i);\n    }\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Notify","success","failure","addEventListener","e","preventDefault","startDelay","parseInt","value","stepDelay","promiseQuantity","i","setTimeout"],"version":3,"file":"03-promises.32f4a620.js.map"}